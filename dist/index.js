function e(e,t,s,n){return new(s||(s=Promise))((function(i,r){function o(e){try{h(n.next(e))}catch(e){r(e)}}function a(e){try{h(n.throw(e))}catch(e){r(e)}}function h(e){var t;e.done?i(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(o,a)}h((n=n.apply(e,t||[])).next())}))}const t=e=>{const t=new Uint8Array(e);window.crypto.getRandomValues(t);return s(t)},s=e=>{const t=new Uint8Array(e),s=[];for(let e=0;e<t.length;e++){const n=`00${t[e].toString(16)}`.slice(-2);s.push(n)}return s.join("")};var n;!function(e){e.Req="Req",e.Resp="Resp",e.RespError="RespError",e.Notify="Notify"}(n||(n={}));class i{static createReq(e,s){return{msgId:t(16),method:e,data:s,type:n.Req,pathname:location.pathname}}static createResp(e,t,s){return{msgId:t,method:e,data:s,type:n.Resp,pathname:location.pathname}}static createRespError(e,t,s){return{msgId:t,method:e,data:{},error:s,type:n.RespError,pathname:location.pathname}}static createNotify(e,s){return{msgId:t(16),method:e,data:s,type:n.Notify,pathname:location.pathname}}}class r{constructor(e){var t,s,n;this._requestedMap=new Map,this._establishTimeout=null!==(t=e.establishTimeout)&&void 0!==t?t:3e4,this._establishInterval=null!==(s=e.establishInterval)&&void 0!==s?s:500,this._targetOrigin=e.targetOrigin,this._targetPathname=e.targetPathname||"*",this._currentWindow=e.currentWindow,this._targetWindow=e.targetWindow,this._logPrefix=null!==(n=e.logPrefix)&&void 0!==n?n:" ✉️✉️✉️ ",this._subscribeFunc=new Map,this._observeFunc=new Map,this._closed=!0,this.handleSubscription=this.handleSubscription.bind(this),this._currentWindow.addEventListener("message",this.handleSubscription)}establish(t){return e(this,void 0,void 0,(function*(){return new Promise(((e,s)=>{t?this._parentEstablish(e,s):this._sonEstablish(e,s)}))}))}_sonEstablish(e,t){let s=null;const n=t=>{if("syncSent"===t.data)return console.log("🩷🩷🩷 ESTABLISH SON Recv:syncSent,  SEND: syncRecv"),void this._targetWindow.postMessage("syncRecv",this._targetOrigin);"establish"===t.data&&(console.log("🩷🩷🩷 ESTABLISH SON ESTABLISH!"),s&&(clearTimeout(s),s=null),this._currentWindow.removeEventListener("message",n),this._closed=!1,e(1))};this._currentWindow.addEventListener("message",n),s=setTimeout((()=>{this._currentWindow.removeEventListener("message",n),t()}),this._establishTimeout)}_parentEstablish(e,t){let s=null;const n=t=>{"syncRecv"===t.data&&(s&&(clearTimeout(s),s=null),console.log("💙💙💙 ESTABLISH PARENT FINISH! NOTIFY: establish"),this._targetWindow.postMessage("establish",this._targetOrigin),this._closed=!1,e(1))};s=setTimeout((()=>{this._currentWindow.removeEventListener("message",n),this._parentEstablish(e,t)}),this._establishInterval),this._currentWindow.addEventListener("message",n,{once:!0}),console.log("💙💙💙 ESTABLISH PARENT SEND: syncSent"),this._targetWindow.postMessage("syncSent",this._targetOrigin)}_send(e){this._targetWindow.postMessage(e,this._targetOrigin)}request(t,s=null){return e(this,void 0,void 0,(function*(){if(console.log(`${this._logPrefix} [SEND-REQ] [${t}]| args`,s),this._closed)throw new Error("postMessage has been closed.");const e=i.createReq(t,s);return new Promise(((t,s)=>{this._requestedMap.set(e.msgId,{data:e,reject:s,resolve:t}),this._send(e)}))}))}notify(e,t=null){console.log(`${this._logPrefix} [SEND-NOTIFY] [${e}]| args`,t);const s=i.createNotify(e,t);this._send(s)}subscribe(e,t){this._subscribeFunc.has(e)||this._subscribeFunc.set(e,[]);const s=this._subscribeFunc.get(e);return s.push(t),()=>{const e=s.indexOf(t);e>-1&&s.splice(e,1)}}unsubscribe(e){this._subscribeFunc.delete(e)}observe(e,t){this._observeFunc.has(e)||this._observeFunc.set(e,[]);this._observeFunc.get(e).push(t)}unobserve(e){this._observeFunc.delete(e)}handleSubscription(e){if(!(e.origin!==this._targetOrigin&&"*"!==this._targetOrigin||e.data.pathname!==this._targetPathname&&"*"!==this._targetPathname))switch(e.data.type){case n.Req:this.handleReq(e.data);break;case n.Resp:case n.RespError:this.handleResp(e.data);break;case n.Notify:this.handleNotify(e.data)}}handleReq(t){return e(this,void 0,void 0,(function*(){const{msgId:e,method:s}=t,n=this._observeFunc.get(s);if(n){console.log(`${this._logPrefix} [RECV-REQ] [${s}] | event`,t);for(const r of n)try{const n=yield r(t),o=i.createResp(s,e,n);this._send(o)}catch(t){const n=i.createRespError(s,e,t);this._send(n)}}}))}handleResp(e){const{msgId:t}=e,s=this._requestedMap.get(t);s&&(console.log(`${this._logPrefix} [RECV-RESP] | event`,e),e.error?s.reject(e.error):s.resolve(e.data),this._requestedMap.delete(t))}handleNotify(e){const{method:t}=e,s=this._subscribeFunc.get(t);if(s&&0!==s.length){console.log(`${this._logPrefix} [RECV-NOTIFY] [${t}]| event`,e);for(let t=0;t<(null==s?void 0:s.length);t++)s[t](e)}}finish(){return e(this,void 0,void 0,(function*(){this._currentWindow.removeEventListener("message",this.handleSubscription),this._closed=!0}))}}export{r as default};
